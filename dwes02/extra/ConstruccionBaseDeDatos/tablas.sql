-- MySQL Script generated by MySQL Workbench
-- Thu Oct 26 19:55:35 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema respira
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `respira` ;

-- -----------------------------------------------------
-- Schema respira
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `respira` DEFAULT CHARACTER SET utf8 ;
USE `respira` ;

-- -----------------------------------------------------
-- Table `respira`.`empleados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `respira`.`empleados` ;

CREATE TABLE IF NOT EXISTS `respira`.`empleados` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `dni` VARCHAR(45) NOT NULL COMMENT 'dni o nie del empleado',
  `nombre` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(65) NOT NULL,
  `roles` SET('admin', 'coord', 'trasoc', 'edusoc') NOT NULL COMMENT 'Se definen 4 roles: admin -> administrador, coord -> coordinador o coordinadora, trasoc -> trabajador/a social, edusoc -> educador o educadora social. Un educador social no puede ser educador social y trabajador social simultaneamente.',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `dni_UNIQUE` (`dni` ASC)
  )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `respira`.`usuarios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `respira`.`usuarios` ;

CREATE TABLE IF NOT EXISTS `respira`.`usuarios` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT 'Id de usuario, se genera de forma automática',
  `dni` VARCHAR(10) NOT NULL COMMENT 'DNI o NIE',
  `activo` TINYINT NOT NULL COMMENT 'true si el usuario está activo en el sistema y false en caso contrario',
  `fnacim` DATE NOT NULL COMMENT 'Fecha de nacimiento del usuario',
  `nombre` VARCHAR(45) NOT NULL,
  `apellidos` VARCHAR(65) NOT NULL,
  `telefono` VARCHAR(15) NOT NULL,
  `email` VARCHAR(65) NOT NULL,
  `nombre_tutor` VARCHAR(45) NULL,
  `apellidos_tutor` VARCHAR(65) NULL,
  `telefono_tutor` VARCHAR(15) NULL,
  `email_tutor` VARCHAR(65) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `dni_UNIQUE` (`dni` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `respira`.`seguimiento`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `respira`.`seguimiento` ;

CREATE TABLE IF NOT EXISTS `respira`.`seguimiento` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `fechahora` DATETIME NOT NULL,
  `medio` ENUM('TLF', 'EMAIL', 'MAIL', 'PRESENCIAL', 'VIDEOCONF', 'OTRO') NOT NULL COMMENT 'Medio de contacto con los usuarios: teléfono, email, correo ordinario, reunión presencial, videocnferencia u otro. ',
  `otro` TINYTEXT NULL,
  `contactado` TINYINT NOT NULL COMMENT 'true si el usuario y/o tutores han acudido a la reunión o se ha podido contactar con ellos, y false en caso contrario',
  `informe` MEDIUMTEXT NULL,
  `empleados_id` INT NOT NULL,
  `usuarios_id` INT NOT NULL,
  INDEX `fk_seguimiento_usuarios1_idx` (`usuarios_id` ASC),
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_seguimiento_empleados`
    FOREIGN KEY (`empleados_id`)
    REFERENCES `respira`.`empleados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_seguimiento_usuarios1`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `respira`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `respira`.`seguimiento_archivado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `respira`.`seguimiento_archivado` ;

CREATE TABLE IF NOT EXISTS `respira`.`seguimiento_archivado` (
  `id` INT NOT NULL,
  `fechahora` DATETIME NOT NULL,
  `medio` ENUM('TLF', 'EMAIL', 'MAIL', 'PRESENCIAL', 'VIDEOCONF', 'OTRO') NOT NULL COMMENT 'Medio de contacto con los usuarios: teléfono, email, correo ordinario, reunión presencial, videocnferencia u otro. ',
  `otro` TINYTEXT NULL,
  `contactado` TINYINT NOT NULL COMMENT 'true si el usuario y/o tutores han acudido a la reunión o se ha podido contactar con ellos, y false en caso contrario',
  `informe` MEDIUMTEXT NULL,
  `empleados_id` INT NOT NULL,
  `usuarios_id` INT NOT NULL,
  INDEX `fk_seguimiento_usuarios1_idx` (`usuarios_id` ASC) ,
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) ,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_seguimiento_empleados0`
    FOREIGN KEY (`empleados_id`)
    REFERENCES `respira`.`empleados` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_seguimiento_usuarios10`
    FOREIGN KEY (`usuarios_id`)
    REFERENCES `respira`.`usuarios` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
